{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Prologo Esta documentacion figura como un archivo para cursos de arduino. Este repositorio guarda una introduccion basica de programacion y documentacion para usar distintos modulos de Arduino","title":"Prologo"},{"location":"#prologo","text":"Esta documentacion figura como un archivo para cursos de arduino. Este repositorio guarda una introduccion basica de programacion y documentacion para usar distintos modulos de Arduino","title":"Prologo"},{"location":"Introduccion/Bucles%20de%20Control/","text":"","title":"Bucles de Control"},{"location":"Introduccion/Funciones/","text":"Funciones Su nombre proviene de las funciones arimeticas, donde generalmente se trabaja de esta manera: $y = f(x)$ Donde $y$ es el producto o el resultado de nuestra funcion, y $x$ es la variable que se puede cambiar en la formula para que de como resultado distintos valores de $y$ En programacion se trabaja de una manera similar: tipo_de_resultado funcion(entrada 1, entrada 2) { // funcion o programa a realizar devuelve resultado; } Ejemplo si se tuviera una funcion que sume dos numeros se puede escribir algo simple como una suma, suponiendo que estamos sumando solo enteros $y = suma(a,b)$ mas detallado se veria asi: $y = a + b$ en programacion se veria algo similar a: int suma(int a, int b) { // ponemos una variable para guardar el resultado de la suma int y; // luego sumamos y = a + b; // luego devolvemos el resultado para que lo use el resto del programa return y; } voids las funciones declaradas como void no necesita devolver ningun valor","title":"Funciones"},{"location":"Introduccion/Funciones/#funciones","text":"Su nombre proviene de las funciones arimeticas, donde generalmente se trabaja de esta manera: $y = f(x)$ Donde $y$ es el producto o el resultado de nuestra funcion, y $x$ es la variable que se puede cambiar en la formula para que de como resultado distintos valores de $y$ En programacion se trabaja de una manera similar: tipo_de_resultado funcion(entrada 1, entrada 2) { // funcion o programa a realizar devuelve resultado; }","title":"Funciones"},{"location":"Introduccion/Funciones/#ejemplo","text":"si se tuviera una funcion que sume dos numeros se puede escribir algo simple como una suma, suponiendo que estamos sumando solo enteros $y = suma(a,b)$ mas detallado se veria asi: $y = a + b$ en programacion se veria algo similar a: int suma(int a, int b) { // ponemos una variable para guardar el resultado de la suma int y; // luego sumamos y = a + b; // luego devolvemos el resultado para que lo use el resto del programa return y; }","title":"Ejemplo"},{"location":"Introduccion/Funciones/#voids","text":"las funciones declaradas como void no necesita devolver ningun valor","title":"voids"},{"location":"Introduccion/Sketches%20Basicos/","text":"","title":"Sketches Basicos"},{"location":"Introduccion/Variables/","text":"Variables las variables son tipos de datos utilizados en cddc dsfsfdsfds","title":"Variables"},{"location":"Introduccion/Variables/#variables","text":"las variables son tipos de datos utilizados en cddc dsfsfdsfds","title":"Variables"}]}